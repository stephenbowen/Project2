
include sources.mk

#platform dependent paramters
ifeq ($(PLATFORM), HOST)
  CPU = cortex-m4
	CC = gcc
	CFLAGS   = -g -Wall -Werror -std=c99 -O0 -DVERBOSE
	CPPFLAGS = -DHOST -DPROJECT1
  INCLUDES = -I./../include/common
	LDFLAGS  = -Xlinker -Map=project1.map

else ifeq ($(PLATFORM), BBB)
  CPU = cortex-m4
  CC = arm-linux-gnueabihf-gcc
	CFLAGS   = -g -Wall -Werror -std=c99 -O0 -DVERBOSE
	CPPFLAGS = -DBBB -DPROJECT1
	INCLUDES = -I./../include/common \
             -I./../include/CMSIS
	LDFLAGS  = -Xlinker -Map=project1.map

else ifeq ($(PLATFORM), KL25Z)
  CPU = cortex-m0plus
  CC = arm-none-eabi-gcc
	CFLAGS   =--specs=nosys.specs -g -Wall -Werror -std=c99 -O0 \
             -march=armv6-m -mthumb -mfloat-abi=softfp -mfpu=fpv4-sp-d16 \
             -mcpu=cortex-m0plus
	CPPFLAGS = -DKL25Z -DPROJECT1
	INCLUDES = -I./../include/common \
             -I./../include/CMSIS \
             -I./../include/kl25z
	LDFLAGS  = -Xlinker -Map=project1.map

else
	CC = gcc
  INCLUDES = -I./../include/common
	CFLAGS   = -g -Wall -Werror -std=c99 -O0 -DVERBOSE
endif

TARGET_ELF = project1.elf
TARGET_I = obj.o

#Autogenerated Dependencies
DEPFLAGS = -MT -$@ -MMD -MP -MF $*.dep
IFLAGS = -MT -$@ -MMD -MP -MF $*.i

#Objects
OBJS = main.o project1.o memory.o conversion.o debug.o data.o endian.o

#Targets
.PHONY: clean
clean:
	rm -f *.o *.i *.asm *.elf *.dep *.s *.map

.PHONY: size
size:
	size *.o *.elf

.PHONY: build
build: $(TARGET_ELF)
$(TARGET_ELF): $(OBJS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(INCLUDES) $(LDFLAGS) $(SPECS) -o $@ $^

.PHONY: compile-all
compile-all: $(OBJS)
$(OBJS): $(SRCS)
	$(CC)  $(CFLAGS) $(CPPFLAGS) $(INCLUDES) $(LDFLAGS) $(SPECS) $(DEPFLAGS) -c $@ $^

#Assembly Output File Targes
memory.s: memory.c
	gcc $(INCLUDES) -S -o $@ $<

conversion.s: conversion.c
	gcc $(INCLUDES) -S -o $@ $<

debug.s: debug.c
	gcc $(INCLUDES) -S -o $@ $<

data.s: data.c
	gcc $(INCLUDES) -S -o $@ $<

endian.s: endian.c
	gcc $(INCLUDES) -S -o $@ $<

project1.s: project1.c
	gcc $(INCLUDES) -S -o $@ $<

main.s: main.c
	gcc $(INCLUDES) -S -o $@ $<

#Preprocessed Output File Targes
memory.i: memory.c
	gcc $(INCLUDES) -E -o $@ $<

conversion.i: conversion.c
	gcc $(INCLUDES) -E -o $@ $<

debug.i: debug.c
	gcc $(INCLUDES) -E -o $@ $<

data.i: data.c
	gcc $(INCLUDES) -E -o $@ $<

endian.i: endian.c
	gcc $(INCLUDES) -E -o $@ $<

project1.i: project1.c
	gcc $(INCLUDES) -E -o $@ $<

main.i: main.c
	gcc $(INCLUDES) -E -o $@ $<

#Object File Targets
memory.o: memory.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(INCLUDES) $(LDFLAGS) $(DEPFLAGS) -c -o $@ $<

conversion.o: conversion.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(INCLUDES) $(LDFLAGS) $(DEPFLAGS) -c -o $@ $<

debug.o: debug.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(INCLUDES) $(LDFLAGS) $(DEPFLAGS) -c -o $@ $<

data.o: data.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(INCLUDES) $(LDFLAGS) $(DEPFLAGS) -c -o $@ $<

endian.o: endian.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(INCLUDES) $(LDFLAGS) $(DEPFLAGS) -c -o $@ $<

project1.o: project1.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(INCLUDES) $(LDFLAGS) $(DEPFLAGS) -c -o $@ $<

main.o: main.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(INCLUDES) $(LDFLAGS) $(DEPFLAGS) -c -o $@ $<
